"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[70993],{70993:(r,c,o)=>{o.r(c),o.d(c,{DataSourceHeaderComponent:()=>s});var a=o(84142),e=o(65879);let s=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-data-source-header"]],standalone:!0,features:[e.jDz],decls:33,vars:0,consts:[["module","DataSourceModule","subPackage","data-source"]],template:function(n,u){1&n&&(e.TgZ(0,"fd-doc-page")(1,"header"),e._uU(2,"Data Source"),e.qZA(),e.TgZ(3,"description")(4,"p")(5,"code"),e._uU(6,"DataSourceDirective"),e.qZA(),e._uU(7," is a standalone directive that includes most common logic when working with the data sources. "),e.qZA(),e.TgZ(8,"p"),e._uU(9," Since it's a standalone directive, users don't need to manually apply it to a desired component. This can be done with "),e.TgZ(10,"code"),e._uU(11,"hostDirectives"),e.qZA(),e._uU(12," object of the "),e.TgZ(13,"code"),e._uU(14,"@Component"),e.qZA(),e._uU(15," or "),e.TgZ(16,"code"),e._uU(17,"@Directive"),e.qZA(),e._uU(18," decorator. "),e.qZA(),e.TgZ(19,"p"),e._uU(20," It handles opening and closing the data stream with the help of the class that implements "),e.TgZ(21,"code"),e._uU(22,"DataSourceParser"),e.qZA(),e._uU(23," interface. "),e.qZA(),e.TgZ(24,"p"),e._uU(25,"This class can be provided via "),e.TgZ(26,"code"),e._uU(27,"FD_DATA_SOURCE_TRANSFORMER"),e.qZA(),e._uU(28," Injection Token."),e.qZA(),e.TgZ(29,"p"),e._uU(30," Additionally, it will emit events when the data inside data provider has been changed, or the data source object has been changed completely. "),e.qZA()(),e._UZ(31,"import",0)(32,"fd-header-tabs"),e.qZA())},dependencies:[a.iD,a.Gt,a.we,a.kC,a.c1],encapsulation:2,changeDetection:0}),t})()}}]);