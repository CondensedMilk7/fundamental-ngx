"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[27982],{27982:(u,s,a)=>{a.r(s),a.d(s,{DisabledHeaderComponent:()=>i});var n=a(71567),t=a(84142),e=a(65879);let i=(()=>{class d{}return d.\u0275fac=function(o){return new(o||d)},d.\u0275cmp=e.Xpm({type:d,selectors:[["ng-component"]],standalone:!0,features:[e.jDz],decls:31,vars:0,consts:[["module","DisabledBehaviorModule","subPackage","utils"]],template:function(o,r){1&o&&(e.TgZ(0,"header"),e._uU(1,"Disabled directive"),e.qZA(),e.TgZ(2,"description")(3,"p"),e._uU(4," When you apply the "),e.TgZ(5,"code"),e._uU(6,"[fdkDisabled]"),e.qZA(),e._uU(7," directive to the element it will be effectively disabled. It will have class "),e.TgZ(8,"code"),e._uU(9,".is-disabled"),e.qZA(),e._uU(10,", as well as attributes "),e.TgZ(11,"code"),e._uU(12,"disabled"),e.qZA(),e._uU(13," and "),e.TgZ(14,"code"),e._uU(15,"aria-disabled"),e.qZA(),e._uU(16,". "),e.qZA(),e.TgZ(17,"p"),e._uU(18," This directive is also provided via injection token "),e.TgZ(19,"code"),e._uU(20,"fdkDisabled"),e.qZA(),e._uU(21," through the DI tree, but also, most importantly you can add "),e.TgZ(22,"code"),e._uU(23,"fdkDisabledProvider"),e.qZA(),e._uU(24," to your providers list and gain always available watcher on disabled state, whether or not you apply "),e.TgZ(25,"code"),e._uU(26,"[fdkDisabled]"),e.qZA(),e._uU(27," to your component. "),e.qZA()(),e._UZ(28,"import",0)(29,"fd-header-tabs")(30,"router-outlet"))},dependencies:[t.Gt,t.we,t.kC,t.c1,n.lC],encapsulation:2}),d})()}}]);