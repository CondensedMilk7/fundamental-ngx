"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[99369],{99369:(i,n,t)=>{t.r(n),t.d(n,{PlatformTextareaHeaderComponent:()=>u});var c=t(71567),a=t(84142),e=t(65879);let u=(()=>{class r{}return r.\u0275fac=function(o){return new(o||r)},r.\u0275cmp=e.Xpm({type:r,selectors:[["app-textarea-header"]],standalone:!0,features:[e.jDz],decls:24,vars:0,consts:[["routerLink","/core/textarea"],["module","PlatformTextAreaModule","subPackage","form"]],template:function(o,l){1&o&&(e.TgZ(0,"fd-doc-page")(1,"header"),e._uU(2,"Textarea"),e.qZA(),e.TgZ(3,"description"),e._uU(4," The text area is an input control that allows the user to enter several lines of text. "),e._UZ(5,"br"),e._uU(6," This text area is specially designed to work with Platform Forms, although it can be used by itself as well in conjunction with "),e.TgZ(7,"a",0),e._uU(8,"Fundamental ngx core's"),e.qZA(),e._uU(9," form directives to achieve similar results. "),e._UZ(10,"br")(11,"br")(12,"import",1)(13,"br"),e.TgZ(14,"h2"),e._uU(15,"Platform specific enhancements:"),e.qZA(),e._uU(16," 1. Textarea can automatically grow its height by specifying the max number of rows, or height to which it can grow. "),e._UZ(17,"br"),e._uU(18," 2. A counter message that counts the number of remaining or exceeded characters. "),e._UZ(19,"br"),e._uU(20," 3. Various interaction behaviours when counter exceeds the number of maximum characters. "),e._UZ(21,"br"),e._uU(22," 4. Support for internationalisation of counter message. "),e.qZA(),e._UZ(23,"fd-header-tabs"),e.qZA())},dependencies:[a.iD,a.Gt,a.we,c.rH,a.kC,a.c1]}),r})()}}]);