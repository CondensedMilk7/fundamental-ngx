"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[92906],{92906:(l,n,t)=>{t.r(n),t.d(n,{PlatformWizardGeneratorHeaderComponent:()=>u});var s=t(71567),a=t(84142),e=t(65879);let u=(()=>{class r{}return r.\u0275fac=function(o){return new(o||r)},r.\u0275cmp=e.Xpm({type:r,selectors:[["fdp-platform-wizard-generator-header"]],standalone:!0,features:[e.jDz],decls:82,vars:0,consts:[["routerLink","/core/wizard"],["routerLink","/platform/form-generator","fragment","default-configuration"],["module","PlatformWizardGeneratorModule","subPackage","wizard-generator"]],template:function(o,d){1&o&&(e.TgZ(0,"fd-doc-page")(1,"header"),e._uU(2,"Wizard generator"),e.qZA(),e.TgZ(3,"description"),e._uU(4," This is a wrapper of the Platform component present in "),e.TgZ(5,"a",0),e._uU(6,"@fundamental-ngx/core"),e.qZA(),e._uU(7,". "),e._UZ(8,"br"),e._uU(9," It provides ability to dynamically generate Wizard without any user-provided templates. "),e._UZ(10,"br")(11,"br"),e.TgZ(12,"h3"),e._uU(13,"Platform specific enhancements:"),e.qZA(),e.TgZ(14,"ul")(15,"li"),e._uU(16,"Steps are dynamically rendered based on steps object input."),e.qZA(),e.TgZ(17,"li"),e._uU(18,"Branching logic is based on the steps object input."),e.qZA()(),e.TgZ(19,"p"),e._uU(20," Developers can also set default form field parameters by calling "),e.TgZ(21,"code"),e._uU(22,"withConfig()"),e.qZA(),e._uU(23," method of the "),e.TgZ(24,"code"),e._uU(25,"PlatformWizardGeneratorModule"),e.qZA(),e._uU(26," during it's import. "),e.qZA(),e.TgZ(27,"p"),e._uU(28," For more information on avaliable elements, please see: "),e.TgZ(29,"a",1),e._uU(30,"Form generator documentation"),e.qZA(),e._uU(31,". "),e.qZA(),e.TgZ(32,"h3"),e._uU(33,"Wizard Generator Elements:"),e.qZA(),e.TgZ(34,"ul")(35,"li")(36,"b"),e._uU(37,"input"),e.qZA(),e._uU(38,": specifies an input field where the user can enter data."),e.qZA(),e.TgZ(39,"li")(40,"b"),e._uU(41,"number"),e.qZA(),e._uU(42,": specifies an input field where the user can enter a number."),e.qZA(),e.TgZ(43,"li")(44,"b"),e._uU(45,"password"),e.qZA(),e._uU(46,": specifies an input field where the user can enter a password."),e.qZA(),e.TgZ(47,"li")(48,"b"),e._uU(49,"checkbox"),e.qZA(),e._uU(50,": specifies square boxes which are ticked (checked) when the user select one or more options. "),e.qZA(),e.TgZ(51,"li")(52,"b"),e._uU(53,"radio"),e.qZA(),e._uU(54,": allows the user to see all options and select one."),e.qZA(),e.TgZ(55,"li")(56,"b"),e._uU(57,"confirm"),e.qZA(),e._uU(58,": is a button which allows to gather all the data from the wizard generator."),e.qZA(),e.TgZ(59,"li")(60,"b"),e._uU(61,"editor"),e.qZA(),e._uU(62,": is a text-field area where the user can include a short text."),e.qZA(),e.TgZ(63,"li")(64,"b"),e._uU(65,"select"),e.qZA(),e._uU(66,": is a combination of select and option components where the list of option is shown in dropdown format. "),e.qZA(),e.TgZ(67,"li")(68,"b"),e._uU(69,"datepicker"),e.qZA(),e._uU(70,': is a combination of "input-group", "popover" and "calendar" to select a date.'),e.qZA(),e.TgZ(71,"li")(72,"b"),e._uU(73,"switch"),e.qZA(),e._uU(74,": is used to activate or deactivate an element."),e.qZA(),e.TgZ(75,"li")(76,"b"),e._uU(77,"multi-input"),e.qZA(),e._uU(78,": is an input with multiple selection enabled."),e.qZA()()(),e._UZ(79,"br")(80,"import",2)(81,"fd-header-tabs"),e.qZA())},dependencies:[a.iD,a.Gt,a.we,s.rH,a.kC,a.c1],encapsulation:2}),r})()}}]);