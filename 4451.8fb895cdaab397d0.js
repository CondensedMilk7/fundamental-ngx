"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4451],{4451:(p,i,n)=>{n.r(i),n.d(i,{LoadingTranslationsDocsComponent:()=>l});var a=n(84142),e=n(65879);let l=(()=>{class o{constructor(){this.basicUsageExample={language:"typescript",code:"import { FD_LANGUAGE, FdLanguage, FD_LANGUAGE_UKRAINIAN } from '@fundamental-ngx/i18n';\n\n// app.module\n@NgModule({\n    // ...\n    providers: [\n        {\n            provide: FD_LANGUAGE,\n            useValue: of<FdLanguage>(FD_LANGUAGE_UKRAINIAN),\n        },\n    ],\n})\nexport class AppModule {}"},this.jsonUsageExample={language:"typescript",code:"\nimport { NgModule, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of, map } from 'rxjs';\nimport { FD_LANGUAGE, FdLanguage, loadJson } from '@fundamental-ngx/i18n';\n\n/**\n * uk.json content\n    {\n        ...other properties\n        \"coreMultiComboBox.selectAllLabel\": \"Select all label custom\"\n    }\n*/\n\n@NgModule({\n    // ...\n    providers: [\n        {\n            provide: FD_LANGUAGE,\n            useFactory: () => {\n                return inject(HttpClient)\n                    .get<Record<string, string>>('./assets/i18n/uk.json')\n                    .pipe(map(loadJson))\n            }\n        },\n    ],\n})\nexport class AppModule {}\n        "},this.supportedLanguages=["Albanian","Bulgarian","Chinese","Czech","English","French","Georgian","Hindi","Italian","Polish","Russian","Ukrainian"].join(", ")}}return o.\u0275fac=function(t){return new(t||o)},o.\u0275cmp=e.Xpm({type:o,selectors:[["ng-component"]],standalone:!0,features:[e.jDz],decls:22,vars:5,consts:[["id","basic","componentName","i18n"],[3,"file"],["id","json","componentName","i18n"]],template:function(t,s){1&t&&(e.TgZ(0,"fd-docs-section-title",0),e._uU(1," Basic Usage "),e.qZA(),e.TgZ(2,"description")(3,"code"),e._uU(4,"@fundamental-ngx/i18n"),e.qZA(),e._uU(5),e.TgZ(6,"code"),e._uU(7),e.qZA(),e._uU(8," and provide it to the DI context of your interest. "),e._UZ(9,"fd-code-snippet",1),e.qZA(),e._UZ(10,"separator"),e.TgZ(11,"fd-docs-section-title",2),e._uU(12," Loading JSON "),e.qZA(),e.TgZ(13,"description"),e._uU(14," You can also load the language from a JSON file. In order to do this, you will need to use the "),e.TgZ(15,"code"),e._uU(16,"loadJson"),e.qZA(),e._uU(17," helper function to properly transform the JSON into the "),e.TgZ(18,"code"),e._uU(19,"FdLanguage"),e.qZA(),e._uU(20," interface. "),e._UZ(21,"fd-code-snippet",1),e.qZA()),2&t&&(e.xp6(5),e.hij(" exports already translated messages for the ",s.supportedLanguages,". To use them, you simply import "),e.xp6(2),e.AsE("FD_LANGUAGE_","{","upperCase(languageName)","}",""),e.xp6(2),e.Q6J("file",s.basicUsageExample),e.xp6(12),e.Q6J("file",s.jsonUsageExample))},dependencies:[a.kZ,a.we,a.ND,a.N_],encapsulation:2,changeDetection:0}),o})()}}]);