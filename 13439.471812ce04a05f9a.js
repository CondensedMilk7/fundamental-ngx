"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[13439],{13439:(l,n,o)=>{o.r(n),o.d(n,{FeedListItemHeaderComponent:()=>d});var t=o(84142),e=o(65879);let d=(()=>{class s{}return s.\u0275fac=function(a){return new(a||s)},s.\u0275cmp=e.Xpm({type:s,selectors:[["app-feed-list-item-header"]],standalone:!0,features:[e.jDz],decls:21,vars:0,consts:[["module","FeedListItemModule","subPackage","feed-list-item"]],template:function(a,u){1&a&&(e.TgZ(0,"fd-doc-page")(1,"header"),e._uU(2,"Feed list item"),e.qZA(),e.TgZ(3,"description")(4,"p"),e._uU(5," The Feed List Item control displays text accompanied by an optional user image. You can combine it with the Feed Input control to implement a simple feed or notes control.\u200c "),e.qZA(),e.TgZ(6,"p"),e._uU(7," The Feed List Item provides a standard UI for 'feeds' where multiple users publish information on regular basis on a certain topic. "),e.qZA(),e.TgZ(8,"p")(9,"strong"),e._uU(10,"Note:"),e.qZA(),e._uU(11," It\u2019s also possible to display rich text (formatted text) in the feed list item. Use "),e.TgZ(12,"code"),e._uU(13,"[isRichText]"),e.qZA(),e._uU(14," field. This feature should be handled with care as it allows for countless custom layouts. "),e.qZA(),e.TgZ(15,"p"),e._uU(16," Please see that you use it responsibly and provide your users with a consistent experience. Only deviate from the default layout and font if absolutely required by the use case. "),e.qZA(),e.TgZ(17,"p"),e._uU(18," If you activate rich text (formatted text), More/less buttons will be hidden and you will see your note fully. "),e.qZA()(),e._UZ(19,"import",0)(20,"fd-header-tabs"),e.qZA())},dependencies:[t.iD,t.Gt,t.we,t.kC,t.c1],encapsulation:2}),s})()}}]);