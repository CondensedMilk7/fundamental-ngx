import{S as N,T as P,U as g,V as U,W as D,_ as y,da as H,ne as K,oe as v,pe as q,qb as B,qe as z,rb as Y,tb as $,te as G,ue as J,ve as Q}from"./chunk-62TC5Z23.js";import"./chunk-PH3OGAWR.js";import"./chunk-JENHLJN4.js";import"./chunk-PVTY2GRD.js";import{$a as A,Bc as j,Kb as t,Lb as S,Me as C,Pc as M,Tb as L,U as T,Wb as u,eb as s,fb as h,jb as I,nb as O,pb as m,qa as d,qb as i,rb as a,sb as p,u as w,w as R,yb as k}from"./chunk-6FDPAG7G.js";import"./chunk-VIJJU4QR.js";function ee(n,e){if(n&1&&(i(0,"li",2),t(1),a()),n&2){let F=e.$implicit;m("value",F),s(1),S(F)}}var f=class extends U{constructor(e){super(e),this.dataProvider=e,this.match("*")}},E=class extends f{constructor(e){super(new D(e))}},_=class extends f{constructor(e){super(new D(e))}},b=class{parse(e){if(N(e))return e;if(Array.isArray(e))return new E(e);if(R(e))return new _(e)}},W=(()=>{let e=class e{constructor(o,r,c){this._destroyRef=o,this._cd=r,this.dataSourceDirective=c,this.arrayDataSource=new Array(20).fill(null).map((x,l)=>l),this.classDataSource=new Array(20).fill(null).map((x,l)=>l+10),this.currentData=[],this.dataSourceOptions=["array","observable","class"],this.currentDataSource="array",this.isLoading=!1}ngOnInit(){this.dataSourceDirective.dataSource=this.arrayDataSource,this.dataSourceDirective.dataChanged$.pipe(C(this._destroyRef)).subscribe(o=>{this.currentData=o,this._cd.detectChanges()}),this.dataSourceDirective.isLoading.pipe(C(this._destroyRef)).subscribe(o=>{this.isLoading=o,this._cd.detectChanges})}changeDataSource(o){switch(o){case"array":this.dataSourceDirective.dataSource=this.arrayDataSource;break;case"observable":this.dataSourceDirective.dataSource=w(this.arrayDataSource).pipe(T(3e3));break;case"class":this.dataSourceDirective.dataSource=new f(new D(this.classDataSource));break}}};e.\u0275fac=function(r){return new(r||e)(h(A),h(j),h(g))},e.\u0275cmp=d({type:e,selectors:[["fundamental-ngx-data-source-default-example"]],standalone:!0,features:[L([{provide:P,useClass:b}]),u,I([{directive:g,inputs:["dataSource","dataSource"],outputs:["dataChanged","dataChanged"]}])],decls:10,vars:4,consts:[["placeholder","Select datasource",3,"value","valueChange"],["fd-option","",3,"value",4,"ngFor","ngForOf"],["fd-option","",3,"value"]],template:function(r,c){r&1&&(i(0,"p"),t(1,"Current sata source:"),a(),i(2,"p"),t(3),a(),i(4,"p"),t(5,"Current data:"),a(),i(6,"p"),t(7),a(),i(8,"fd-select",0),k("valueChange",function(l){return c.currentDataSource=l})("valueChange",function(l){return c.changeDataSource(l)}),O(9,ee,2,2,"li",1),a()),r&2&&(s(3),S(c.currentDataSource),s(4),S(c.isLoading?"Loading...":c.currentData),s(1),m("value",c.currentDataSource),s(1),m("ngForOf",c.dataSourceOptions))},dependencies:[$,Y,B,M],encapsulation:2,changeDetection:0});let n=e;return n})();var X=(()=>{let e=class e{constructor(){this.dataSourceDefaultExample=[y("default/data-source-default-example.component.html"),y("default/data-source-default-example.component.ts")]}};e.\u0275fac=function(r){return new(r||e)},e.\u0275cmp=d({type:e,selectors:[["app-data-source"]],standalone:!0,features:[u],decls:6,vars:1,consts:[["id","default","componentName","DataSource"],[3,"exampleFiles"]],template:function(r,c){r&1&&(i(0,"fd-docs-section-title",0),t(1," Data Source Standard Usage "),a(),p(2,"description"),i(3,"component-example"),p(4,"fundamental-ngx-data-source-default-example"),a(),p(5,"code-example",1)),r&2&&(s(5),m("exampleFiles",c.dataSourceDefaultExample))},dependencies:[z,v,K,W,H],encapsulation:2});let n=e;return n})();var Z=(()=>{let e=class e{};e.\u0275fac=function(r){return new(r||e)},e.\u0275cmp=d({type:e,selectors:[["app-data-source-header"]],standalone:!0,features:[u],decls:33,vars:0,consts:[["module","DataSourceModule","subPackage","data-source"]],template:function(r,c){r&1&&(i(0,"fd-doc-page")(1,"header"),t(2,"Data Source"),a(),i(3,"description")(4,"p")(5,"code"),t(6,"DataSourceDirective"),a(),t(7," is a standalone directive that includes most common logic when working with the data sources. "),a(),i(8,"p"),t(9," Since it's a standalone directive, users don't need to manually apply it to a desired component. This can be done with "),i(10,"code"),t(11,"hostDirectives"),a(),t(12," object of the "),i(13,"code"),t(14,"@Component"),a(),t(15," or "),i(16,"code"),t(17,"@Directive"),a(),t(18," decorator. "),a(),i(19,"p"),t(20," It handles opening and closing the data stream with the help of the class that implements "),i(21,"code"),t(22,"DataSourceParser"),a(),t(23," interface. "),a(),i(24,"p"),t(25,"This class can be provided via "),i(26,"code"),t(27,"FD_DATA_SOURCE_TRANSFORMER"),a(),t(28," Injection Token."),a(),i(29,"p"),t(30," Additionally, it will emit events when the data inside data provider has been changed, or the data source object has been changed completely. "),a()(),p(31,"import",0)(32,"fd-header-tabs"),a())},dependencies:[q,J,v,Q,G],encapsulation:2,changeDetection:0});let n=e;return n})();var Ce=[{path:"",component:Z,data:{primary:!0},children:[{path:"",component:X}]}],ge="data-source",ye="dataSource";export{ye as API_FILE_KEY,ge as LIBRARY_NAME,Ce as ROUTES};
