"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[11997],{11997:(l,c,t)=>{t.r(c),t.d(c,{ClickedHeaderComponent:()=>r});var i=t(71567),o=t(84142),e=t(65879);let r=(()=>{class n{constructor(){}}return n.\u0275fac=function(d){return new(d||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["ng-component"]],standalone:!0,features:[e.jDz],decls:37,vars:0,consts:[["module","ClickedBehaviorModule","subPackage","utils"]],template:function(d,s){1&d&&(e.TgZ(0,"header"),e._uU(1,"Clicked event manager"),e.qZA(),e.TgZ(2,"description")(3,"p"),e._uU(4,' During the development of accessible components, reoccurring behaviors are often found leading to frequent code duplication. One of these instances is interaction detection. Besides the "click" event, both "space" and "enter" can be an indication of the user\'s will to select something. This requires the developer to implement handlers for all three of these events. To eliminate that much-repeated code, utilize the '),e.TgZ(5,"code"),e._uU(6,"fdClicked"),e.qZA(),e._uU(7," directive. The syntax is very simple, instead of writing "),e.TgZ(8,"code"),e._uU(9,'(click)="onClickHandler($event)"'),e.qZA(),e._uU(10,", you will write "),e.TgZ(11,"code"),e._uU(12,'(fdkClicked)="onClickHandler($event)"'),e.qZA(),e._uU(13,' and it will catch both "keydown.enter" and "keydown.space" events alongside the regular "click" event. '),e.qZA(),e.TgZ(14,"p")(15,"code"),e._uU(16,"(fdkClicked)"),e.qZA(),e._uU(17," also works with the "),e.TgZ(18,"code"),e._uU(19,"@HostListener"),e.qZA(),e._uU(20," decorator and with "),e.TgZ(21,"code"),e._uU(22,"Renderer2.listen"),e.qZA()(),e.TgZ(23,"p"),e._uU(24," Include "),e.TgZ(25,"code"),e._uU(26,"ClickedBehaviorModule.forRoot()"),e.qZA(),e._uU(27," in "),e.TgZ(28,"code"),e._uU(29,"imports"),e.qZA(),e._uU(30," array of your "),e.TgZ(31,"b"),e._uU(32,"Root"),e.qZA(),e._uU(33," module to have access to the event handler. "),e.qZA()(),e._UZ(34,"import",0)(35,"fd-header-tabs")(36,"router-outlet"))},dependencies:[o.Gt,o.we,o.kC,o.c1,i.lC],encapsulation:2}),n})()}}]);